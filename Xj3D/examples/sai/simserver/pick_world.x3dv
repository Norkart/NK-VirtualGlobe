#X3D V3.0 utf8

#   Web3d.org Copyright (c) 2001-2005
#        X3D Source
#
# This source is licensed under the BSD license.
# Please read docs/BSD.txt for the text of the license.
#
# This software comes with the standard NO WARRANTY disclaimer for any
# purpose. Use it at your own risk. If there's a problem you get to fix it.

PROFILE Immersive
COMPONENT xj3d_PickingUtilities:1
COMPONENT DIS:1

NavigationInfo {
   type ["WALK","ANY"]
}

Viewpoint {
   position 0 100 0
   orientation 1 0 0 -1.54
   description "Top View"
}

# Put all geometry which can intersect with AUV here
DEF TARGETS Group {
   children [
EspduTransform {
   address "224.2.181.145"
   port 62040
   siteID 0
   applicationID 1
   entityID 1
   networkMode "networkReader"
    children [
        Shape { appearance Appearance { material Material { diffuseColor 1 0 0 }} geometry Box { size 1 1 1} }
    ]
}
]}



DEF AUV EspduTransform {
   address "224.2.181.145"
   port 62040
   siteID 0
   applicationID 1
   entityID 0
   networkMode "networkReader"
    children [

    Transform {
       rotation 0 1 0 1.54
       children [

    Shape {
      appearance Appearance {
        material DEF WHISKER_MAT Material {
          emissiveColor 0 1 0
        }
      }
      geometry DEF WHISKERS IndexedLineSet {
        coord Coordinate {
          point [ 0 0 2.5  0 0 5 -1 0 5 1 0 5]
        }
        coordIndex [ 0 1 -1 0 2 -1 0 3]
      }
    }
      Shape {
         appearance Appearance {
            material Material {
               diffuseColor 0 0 1
               transparency 0.1
            }
         }
         geometry Box { size 0.5 0.5 5 }
      }

DEF PICKER LinePicker {
  pickingGeometry USE WHISKERS
  enabled TRUE
  pickTarget [
    USE TARGETS
  ]
}
]}
   ]
}

# Script to do the simple colour changing when a pick is active
DEF ColourScript Script {
  inputOnly SFBool active
  outputOnly SFColor colour_changed
  url "ecmascript:
    function active(val) {
      if(val)
        colour_changed = new SFColor(1, 0, 0);
      else
        colour_changed = new SFColor(0, 1, 0);
    }
  "
}

Transform {
   translation 0 0 -5
   children [
        Shape {
           appearance Appearance {
              material USE WHISKER_MAT
           }
           geometry Sphere {
               radius 2
            }
        }
   ]
}
ROUTE PICKER.isActive TO ColourScript.active
ROUTE ColourScript.colour_changed TO WHISKER_MAT.set_emissiveColor
